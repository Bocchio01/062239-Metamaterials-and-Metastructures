function [modulation, E_piezos_shunted_model, Z_shunt_label, E_piezo_shunted_label] = setup_piezos_shunted(modulation_label, Z_shunt_label, E_piezo_shunted_label)

load('parameters.mat') %#ok<LOAD>

% Modulation data
modulation.model      = modulation_label;
modulation.lambda     = 3 * (beam.L(2) / 24);
modulation.wavenumber = 2*pi / modulation.lambda;

% Shunt and piezo connection modelling
Z_shunt_map = containers.Map( ...
    {'Absent', 'R', 'L', 'C-', 'RL', 'RC-', 'RLC-'}, ...
    { ...
        @(w) +inf, ...
        @(w) shunt.R, ...
        @(w) 1i * shunt.L * w, ...
        @(w) - shunt.R1 / shunt.R2 * (1/shunt.R0 + 1i*w*shunt.C0)^-1, ...
        @(w) shunt.R + 1i * shunt.L * w, ...
        @(w) shunt.R - shunt.R1 / shunt.R2 * (1/shunt.R0 + 1i*w*shunt.C0)^-1, ...
        @(w) shunt.R + 1i * shunt.L * w - shunt.R1 / shunt.R2 * (1/shunt.R0 + 1i*w*shunt.C0)^-1 ...
    } ...
    );
Z_shunt_model = Z_shunt_map(Z_shunt_label);


E_piezo_shunted_map = containers.Map( ...
    {'Generic', 'C- (Ideal)', 'C- (Real)'}, ...
    { ...
        @(w) piezo.Y11_E * (1 - piezo.k31^2 / (1 + 1i*w*piezo.C_S*Z_shunt_model(w)));
        @(w) piezo.Y11_E * ...
            (shunt.C0*shunt.R2/shunt.R1 - piezo.C_T) / ...
            (shunt.C0*shunt.R2/shunt.R1 - piezo.C_S);
        @(w) piezo.Y11_E * ...
            (1 + 1i*w*shunt.R0 * (shunt.C0*shunt.R2/shunt.R1 - piezo.C_T)) / ...
            (1 + 1i*w*shunt.R0 * (shunt.C0*shunt.R2/shunt.R1 - piezo.C_S));
    } ...
    );
E_piezo_shunted_model = E_piezo_shunted_map(E_piezo_shunted_label);


switch modulation.model
    
    case {'OFF-OFF-OFF', 'ON-ON-ON', 'ON-ON-OFF'}
        modulation.omega = 0;
        modulation.period = 1;
        modulation.amplitude = 0;

    case {'Sinusoidal (continuos)', 'Sinusoidal (discrete)'}
        modulation.omega = 0.2 * sqrt(beam.E(1) / beam.rho(1)) * modulation.wavenumber;
        modulation.period = 2 * pi / modulation.omega;
   
        % E_s0 = (E_sandwich(E_su) + E_sandwich(piezo.Y11_E)) / 2;
        % E_m = (E_sandwich(E_su) - E_sandwich(piezo.Y11_E)) / 2;
        % modulation.amplitude = E_m / E_s0;
        modulation.amplitude  = 27.5 / 100;
end


switch modulation.model

    case 'OFF-OFF-OFF'
        E_piezos_shunted_model = ...
            { ...
                @(t, w) piezo.Y11_E ...
                @(t, w) piezo.Y11_E ...
                @(t, w) piezo.Y11_E ...
            };

    case 'ON-ON-ON'
        E_piezos_shunted_model = ...
            { ...
                @(t, w) E_piezo_shunted_model(w) ...
                @(t, w) E_piezo_shunted_model(w) ...
                @(t, w) E_piezo_shunted_model(w) ...
            };

    case 'ON-ON-OFF'
        E_piezos_shunted_model = ...
            { ...
                @(t, w) E_piezo_shunted_model(w) ...
                @(t, w) E_piezo_shunted_model(w) ...
                @(t, w) piezo.Y11_E ...
            };

    case 'Sinusoidal (continuos)'
        E_piezos_shunted_model = ...
            { ...
                @(t, w) (beam.E(2) * (1 + modulation.amplitude * cos(w*t + (1-1)*2*pi/3 ))) ...
                @(t, w) (beam.E(2) * (1 + modulation.amplitude * cos(w*t + (2-1)*2*pi/3 ))) ...
                @(t, w) (beam.E(2) * (1 + modulation.amplitude * cos(w*t + (3-1)*2*pi/3 ))) ...
            };


    case 'Sinusoidal (discrete)'
        E_piezos_shunted_model = ...
            { ...
                @(t, w) (beam.E(2) * (1 + modulation.amplitude * sign( cos(w*t + (1-1)*2*pi/3 )))) ...
                @(t, w) (beam.E(2) * (1 + modulation.amplitude * sign( cos(w*t + (2-1)*2*pi/3 )))) ...
                @(t, w) (beam.E(2) * (1 + modulation.amplitude * sign( cos(w*t + (3-1)*2*pi/3 )))) ...
            };

    otherwise
        error('Unknown modulation model: %s', modulation.model)

end
end

